@model IPagedList<BudgetSystem.Core.ViewModels.ORSItemViewModel>
@using PagedList;
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity
<link href="~/Content/PagedList.css" rel="stylesheet" />
@{
    ViewBag.Title = "Obligation";
}

<h2>Obligation Request and Status</h2>
<br />
<div class="form-group">
    @using (Html.BeginForm())
    {
        <p>


            @Html.Label("Find: ")

            @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" class="btn btn-primary" />


        </p>
    }
    @using (Html.BeginForm("ExportToExcel", "ORSMainManager", FormMethod.Post))
    {
        <input type="submit" class="btn btn-primary" value="Export" />
    }
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("ORS Number", "Index", new { sortOrder = ViewBag.IdSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Payee", "Index", new { sortOrder = ViewBag.PayeeSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Office", "Index", new { sortOrder = ViewBag.OfficeSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.AddressSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Particulars", "Index", new { sortOrder = ViewBag.ParticularsSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Processor", "Index", new { sortOrder = ViewBag.ProcessorSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Amount", "Index", new { sortOrder = ViewBag.AmountSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Payee)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Office)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Particulars)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSMain.Processor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ORSMain.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.ORSMain.Id })
                @*@if (Request.IsAuthenticated && User.Identity.GetUserName() == item.ORSMain.Processor)
                {

                    @Html.ActionLink("Delete", "Delete", new
                    {
                        id = item.ORSMain.Id
                    })
                }*@
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))