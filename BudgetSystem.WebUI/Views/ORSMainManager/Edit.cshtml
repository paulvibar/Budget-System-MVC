@model BudgetSystem.Core.ViewModels.ORSMainManagerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ORSMainInformation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ORSMain.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.AllotmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ORSMain.AllotmentCode, new SelectList(Model.AllotmentClass, "AllotmentCode", "Caption"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.FundSource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ORSMain.FundSource, new SelectList(Model.FundSource, "Code", "Caption"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.FundCluster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ORSMain.FundCluster, new SelectList(Model.FundCluster, "Code", "Caption"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Payee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Payee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Payee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Office, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Office, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Office, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Particulars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Particulars, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Particulars, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.BoxASignatory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.BoxASignatory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.BoxASignatory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.BoxAPosition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.BoxAPosition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.BoxAPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.BoxBID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ORSMain.BoxBID, new SelectList(Model.BoxB, "Id", "Caption"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ORSMain.Processor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ORSMain.Processor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ORSMain.Processor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<p>
    @Html.ActionLink("Create New", "Create", "ORSDetailsManager", new { ORSId = Convert.ToInt32(Request.Url.Segments.Last()) }, null)
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ORSDetails.RCId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ORSDetails.PAPId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ORSDetails.UACSId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ORSDetails.Amount)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.ListORSDetails)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RC.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MFOPAP.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UACS.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ORSDetails.Amount)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "ORSDetailsManager", new { ORSId = Convert.ToInt32(Request.Url.Segments.Last()), id = item.ORSDetails.Id }, null) |
                @Html.ActionLink("Details", "Details", new { id = item.ORSDetails.Id }) |
                @Html.ActionLink("Delete", "Delete", new { ORSId = Convert.ToInt32(Request.Url.Segments.Last()), id = item.ORSDetails.Id })
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
